#+TITLE: My Doom Emacs Writing Set Up

#+options: ':t *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+author: Tony Ballantyne
#+email: tony@tonyballantyne.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 27.1 (Org mode 9.6)
#+cite_export:

* Introduction
This is version 2 of my Emacs Writing Setup, following my adoption of Doom Emacs. You can find the legacy version here: [[file:EmacsWritingTips.org]]

My Doom config can be found here: [[https://github.com/ballantony/doom-emacs-config]]

* About this Document
This document was written due to the interest generated by a post on my blog entitled [[https://www.tonyballantyne.com/writing-tools/][Writing Tools]].

The document is not an Emacs Tutorial, nor is it an exhortation to learn Emacs, but rather a description of how I use Emacs org-mode to help me write fiction (see [[https://www.tonyballantyne.com][TonyBallantyne.com]] for more).  My tech blog, [[https://tech.tonyballantyne.com][Tony Ballantyne Tech]], contains more Emacs materials including tips and tricks ([[https://tech.tonyballantyne.com/emacs-workout/emacs-workout/][The Emacs Workout]]) and a brief ELisp tutorial ([[https://tech.tonyballantyne.com/emacs-workout/just-enough-emacs-lisp/][Just Enough Emacs Lisp]])

Many of the ideas on the use of org-mode were taken from Bernt Hansen's excellent document [[http://doc.norang.ca/org-mode.html][Org Mode Organize Your Life in Plain Text!]], as was the format of this document itself.  Some of the Emacs tricks came from the [[http://www.emacswiki.org/emacs/][Emacs Wiki]] and  [[http://ergoemacs.org/emacs/emacs.html][Xah Lee's Emacs tutorial]].

** Related Materials
- [[https://tonyballantyne.com][TonyBallantyne.com]]: My website
- [[https://blog.tonyballantyne.com/][blog.tonyballantyne.com]]: My Blog
- [[http://www.tonyballantyne.com/emacs.html][Emacs Tutorial]]: Emacs Tutorial for Writers
- [[https://tonyballantyne.com/how-to-write.html][Tips on How to Write]]: More tips for writers

* License
#+BEGIN_QUOTE
Copyright (C)  2022 Tony Ballantyne.
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.

Code in this document is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This code is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#+END_QUOTE
* Why Emacs?
I think of Emacs as a text editors' tool.  As I spend most of my life working with text, either programming or writing, I want to do it as efficiently as possible.

It first struck me when I was editing my novel [[https://tonyballantyne.com/fiction/the-recursion-series/][Divergence]] just how inefficient I was being in pressing the arrow key and waiting for the cursor to get to where I wanted.  That got me thinking about the time spent deleting text, transposing words, moving around paragraphs... I realised there must be a quicker way.

And then I remembered Emacs.

It makes sense for someone who spends most of their time manipulating text to learn a group of obscure key combinations.  It saves time and increases productivity.  Learning to use Emacs  properly reminds me of playing Jazz on the piano.  I've learnt all those chords and runs and fills so that I can use them without thinking when I'm improvising.  Likewise, I've practised using Emacs key strokes such as M-f, M--M-c and C-M-<Space> so often I use them without thinking when editing. I rely on M-/ to complete words, and I can't do without M-h and C-e to select and move around text.

I practice using Emacs because it makes me a more productive writer. If you're interested, I've written up some of those tips and exercises on my [[https://tech.tonyballantyne.com/emacs-workout/emacs-workout/][Emacs Workout]].

* Why Doom Emacs?
Emacs is incredibly configurable. I can choose, for example, the shape and contents of my agenda, the completion engine I use and even such things as the colour of my Todos.

And that’s a problem. Emacs allows me to configure many things that, if I’m honest, I really don’t care about.

It’s very easy to fall into the Emacs trap of sending time configuring the system rather than doing any actual work. I don’t want to think about how many hours I’ve spent experimenting with new packages and thinking of the perfect key bindings when I could have been writing stories instead. GTD can be a powerful procrastinator.

That’s why I’m happy to let someone else do it for me.

Enter Doom Emacs. So what if the TODOs are a different colour to the ones I use, and the capture templates aren’t quite the ones I was using, they’re still good. The key bindings may be different, but they’re far more extensive than any I’ve ever set up and I could probably finish a short story in the time it would take me to replicate them (and I can always override the few I really care about: C-e for example).

Most of all, [[https://github.com/hlissner][Henrik Lissner]] knows so much more about Emacs than I. I’ve learned so much simply tracking through his code. I wasn’t aware of Vertico until it turned up in the Doom config. I don’t have the time or inclination to try out all new Emacs packages. It’s great that someone else is doing this, and if I don’t like their choices, well, Doom is flexible enough for me to change them.

One final observation. Doom Emacs is fast to load. This is important to me. I like to take notes or begin writing when inspiration strikes. I can open Doom Emacs (or Orgzly on my mobile phone) and take a note in the time it takes apps such as Evernote or Notion to load.
* TODO Setup

* TODO Structuring a Story
